{"version":3,"file":"static/js/581.30983faf.chunk.js","mappings":"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","sources":["components/UserForm/UserForm.styled.jsx","components/CalendarToolbar/CalendarToolbar.styled.jsx","components/CalendarToolbar/PeriodPaginator/PeriodPaginator.styled.jsx","utils/calendarToolbar/formatPeriod.js","components/CalendarToolbar/PeriodPaginator/PeriodPaginator.js","utils/calendarToolbar/changeDate.js","components/CalendarToolbar/PeriodTypeSelect/PeriodTypeSelect.styled.jsx","components/CalendarToolbar/PeriodTypeSelect/PeriodTypeSelect.js","components/CalendarToolbar/CalendarToolbar.js","components/Calendar/Calendar.styled.jsx","components/Calendar/Calendar.js","pages/CalendarPage/CalendarPage.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Form, Field } from 'formik';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nexport const Wrapper = styled.div`\n display: flex;\n flex-direction: column;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  background: rgba(255, 255, 255, 1); \n  border-radius: 16px;\n   padding: 40px 18px;\n\n    @media screen and (min-width: 1440px) {\n      padding-top: 60px;\n    }\n`;\n\nexport const FormUserProfile = styled(Form)`\ndisplay: flex;\nflex-direction: column;\nwidth: 100%;\n\n    @media screen and (min-width: 375px) {\n      width: 299px;\n    }\n\n    @media screen and (min-width: 768px) {\n        width: 354px;\n    }\n     @media screen and (min-width: 1440px) {\n        width: 758px;\n    }\n`;\n\nexport const BtnUploadAvatar = styled(Field)`\nopacity: 1;\nposition: absolute;\nbottom: 92%;\nright: 23%;\noverflow: hidden;\nwidth: 14px;\nheight: 14px;\nborder-radius: 50%;\n\n @media screen and (min-width: 768px) {\n       width: 24px;\n       height: 24px;\n       bottom: 31%;\n       right: 14%;\n    }\n`;\n\nexport const Avatar = styled.img`\n  border-radius: inherit;\n`;\n\nexport const LabelAvatar = styled.label`\nposition: relative;\nmargin: 0 auto;\nmargin-bottom: 40px;\ntext-align: center;\n`;\n\n\nexport const AvatarWrapper = styled.div`\nposition: absolute;\ntop: -71px;\nwidth: 72px;\nmargin: 0 auto;\nborder: 2px solid rgba(62, 133, 243, 1);\nborder-radius: 50%;\n\n @media screen and (min-width: 768px) {\n       top: 0;\n       width: 124px;\n       left: -17%;\n    }\n`;\n\nexport const UserName = styled.p`\nmargin-top: 18px;\n\nfont-size: 14px;\nfont-weight: 700;\n\n @media screen and (min-width: 768px) {\n    margin-top: 144px;\n      font-size: 18px;\n      margin-bottom: 8px;\n    }\n`;\n\nexport const UserLabel = styled.span`\nfont-size: 12px;\nfont-weight: 600;\nline-height: 1.17;\n\n @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.3;\n    }\n`;\n\nexport const Input = styled(Field)`\nwidth: 100%;\nheight: 40px;\nborder-radius: 8px;\nborder: 1px solid rgba(17, 17, 17, 0.1);\noutline: none;\nmargin-top: 8px;\nmargin-bottom: 18px;\npadding: 12px 14px;\nfont-weight: 600;\nfont-size: 14px;\nline-height: 1.3;\n\n @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.13;\n    }\n\n@media screen and (min-width: 1440px) {\n   width: 354px;\n    }\n`;\n\nexport const Label = styled.label`\ndisplay: flex;\nflex-direction: column;\nfont-weight: 400;\nfont-size: 12px;\nline-height: 1.17;\ncolor: rgba(17, 17, 17, 1);\n\n @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.3;\n    }\n`;\n\nexport const MainFieldWrapper = styled.div`\n @media screen and (min-width: 1440px) {\n    display: flex;\n   flex-wrap: wrap;\n   gap: 50px;\n   margin-bottom: 70px;\n    }\n`;\nexport const BlockFieldWrapper = styled.div`\n @media screen and (min-width: 1440px) {\n    display: flex;\n    flex-direction: column;\n\n    }\n`;\n\n\nexport const SubmitBtn = styled.button`\n  margin: 0 auto;\n  margin-top: 22px;\n  width: 195px;\n  height: 46px;\n  border-radius: 16px;\n  border: none;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.3;\n  background: rgba(62, 133, 243, 1);\n  color: rgba(255, 255, 255, 1);\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n      width: 262px;\n    }\n\n//   transition: background-color анимация;\n\n  :disabled {\n    cursor: not-allowed;\n  }\n\n  :hover,\n  :focus {\n    background-color: rgba(43, 120, 239, 1);\n  }\n\n  :disabled {\n    opacity: 0.4;\n  }\n\n`;\n\nexport const DatePickerStyles = styled(DatePicker)`\n\nwidth: 100%;\nheight: 40px;\nborder-radius: 8px;\nborder: 1px solid rgba(17, 17, 17, 0.1);\noutline: none;\nmargin-top: 8px;\nmargin-bottom: 18px;\npadding: 12px 14px;\nfont-weight: 600;\nfont-size: 14px;\nline-height: 1.3;\n\n @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.3;\n    }\n\n@media screen and (min-width: 1440px) {\n   width: 354px;\n    }\n`;\n\nexport const DatePickerWrapper = styled.div`\n  .react-datepicker {\n    background-color: rgba(62, 133, 243, 1);\n    border-radius: 16px;\n    overflow: hidden;\n    border: none;\n    color: rgba(255, 255, 255, 1);\n    width: 327px;\n    height: 354px;\n    display: flex;\n    justify-content: center;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 1.3;\n}\n.react-datepicker__header {\n        position: relative;\n\n    background-color: rgba(62, 133, 243, 1);\n    border-bottom: 1px solid rgba(62, 133, 243, 1);\n  }\n\n  .react-datepicker__navigation-icon {\n    ::before {\n      border-color: rgba(255, 255, 255, 1);\n    }\n\n.react-datepicker__navigation--next {\n    right: 9px;\n    top: 35px;\n}\n  }\n\n  .react-datepicker__month-select,\n  .react-datepicker__year-select {\n    padding: 5px;\n    width: 90px;\n    color: rgba(255, 255, 255, 1);\n\n    text-align: center;\n    font-size: 10px;\n    overflow-y: auto;\n    cursor: pointer;\n\n    @media screen and (min-width: 375px) {\n      width: 110px;\n    }\n\n    @media screen and (min-width: 1440px) {\n      width: 120px;\n      font-size: 16px;\n    }\n\n    &:focus {\n      outline: none;\n    }\n\n    ::-webkit-scrollbar {\n      box-sizing: border-box;\n      width: 5px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n      background: rgba(255, 255, 255, 1);\n      border-radius: 10px;\n      margin-top: 15px;\n      margin-bottom: 15px;\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n      background: var(--color-button-period-type);\n      border-radius: 10px;\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n      background: var(--primary-text-color);\n    }\n  }\n\n  .react-datepicker__current-month {\n    margin-top: 15px;\n    margin-bottom: 11px;\n    font-size: 20px;\n    font-weight: 600;\n    line-height : 1.2;\n\n    color: rgba(255, 255, 255, 1);\n  }\n\n  .react-datepicker__day-name {\n     width: 46px;\n    height: 42px;\n    margin: 0;\n    padding: 9px;\n    color: rgba(255, 255, 255, 1);\n  }\n\n  .react-datepicker__day {\n    width: 46px;\n    height: 46px;\n    margin: 0;\n    padding: 9px;\n    color: rgba(255, 255, 255, 1);\n    :hover,\n    :focus {\n      background-color: var(--auth-bg-color);\n      color: var(--hover-btn-background-color);\n      border-radius: 24px;\n      opacity: 0.7;\n    }\n  }\n\n\n\n  .react-datepicker__day--weekend {\n    color: rgba(255, 255, 255, 1);\n    opacity: 40%;\n  }\n\n\n    .react-datepicker__day--today,\n  .react-datepicker__day--selected {\n    background-color: rgba(255, 255, 255, 1);\n    color: rgba(62, 133, 243, 1);\n    border-radius: 50%;\n    opacity: 1;\n  }\n\n    .react-datepicker__day--keyboard-selected{\n            border-radius: 50%;\n    }\n\n    .react-datepicker__month {\n    margin: 0;\n}\n\n\n.react-datepicker__navigation--previous {\n    left: 7px;\n    top: 30px;\n}\n\n.react-datepicker__navigation--next {\n    right: 7px;\n    top: 30px;\n}\n\n.react-datepicker__day-names {\nborder-bottom: 1px solid rgba(255, 255, 255, 0.2);\n}\n    `;\n\n\n\n\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    justify-content: space-between;\n\n    margin-bottom: 16px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 32px;\n  }\n`;","import styled from 'styled-components';\nimport {\n  MdOutlineKeyboardArrowLeft,\n  MdOutlineKeyboardArrowRight,\n} from 'react-icons/md';\n\nimport { DatePickerStyles, DatePickerWrapper } from 'components/UserForm/UserForm.styled';\n\nexport const Period = styled.span`\n\n  padding: 6px 12px;\n  color: #fff;\n  font-size: 14px;\n  font-weight: 600;\n  background-color: #3e85f3;\n  border-radius: 8px;\ncursor: pointer;\n  @media screen and (min-width: 768px) {\n    padding: 8px 12px;\n    font-size: 16px;\n  }\n`;\n\nexport const PickerWrapper = styled(DatePickerWrapper)`\nposition: absolute;\nleft: 0;\ntop: 8px;\n\n@media screen and (min-width: 768px) {\n  top: 13px;\n\n  }\n\n.react-datepicker{\nwidth: 235px;\nheight: 100%;\npadding: 18px;\n\n}\n\n.react-datepicker__month-container{\n  width: 235px;\n}\n\n.react-datepicker__header {\npadding: 0;\n}\n.react-datepicker__current-month{\n  margin: 0;\n  margin-bottom: 18px;\n}\n.react-datepicker__navigation{\ntop: 18px;\nwidth: 20px;\nheight: 20px;\n}\n\n.react-datepicker__navigation--previous{\nleft: 9px;\n}\n.react-datepicker__navigation-icon--previous{\nright: 0;\n}\n\n.react-datepicker__navigation--next{\n  right: 9px;\n}\n\n.react-datepicker__navigation-icon--next{\n  left: 0;\n}\n\n.react-datepicker__navigation--disabled-previous{\n  display: flex;\n}\n\n.react-datepicker__current-month{\nfont-size: 16px;\nfont-family: Inter;\nfont-weight: 600;\nletter-spacing: -0.32px;\n}\n.react-datepicker__day-names{\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 199px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 8px;\n\nborder: none;\n}\n\n.react-datepicker__day-name{\n  width: 24px;\n  height: 17px;\n  padding: 0;\n\n  font-size: 14px;\nfont-family: Inter;\nfont-weight: 500;\nletter-spacing: -0.28px;\nline-height: 1.3;\ncolor: #FFFFFF80;\ncursor: default;\n}\n\n.react-datepicker__month{\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\nalign-items: center;\n  gap: 13px;\n  width: 235px;\n  padding-left: 18px;\n  padding-right: 18px;\n  padding-top: 10px;\n  border-top: 1px solid #FFFFFF33;\n}\n\n.react-datepicker__day--outside-month, .react-datepicker__day--disabled{\ncolor: #FFFFFF33;\n\n}\n\n.react-datepicker__day--disabled.react-datepicker__day{\n  cursor: default;\n}\n\n.react-datepicker__day--weekend{\n  opacity: 1;\n}\n\n.react-datepicker__week{\n  width: 199px;\n  display: flex;\n  justify-content: space-between;\n}\n\n.react-datepicker__day{\n  display: flex;\n  align-items: center;\n  justify-content: center;\nwidth: 24px;\nheight: 24px;\n\n\nfont-size: 14px;\nfont-family: Inter;\nline-height: 1.3;\nletter-spacing: -0.28px;\ncursor: pointer;\n\n    :hover {\n      background-color: #fff;\n      color: #3E85F3;\n      border-radius: 24px;\n      opacity: 0.8;\n    }\n\n    \n    :focus {\n      background-color: #fff;\n      color: #3E85F3;\n      border-radius: 24px;\n      opacity: 1;\n    }\n}\n\n.react-datepicker__day--keyboard-selected{\n      background-color: #fff;\n      color: #3E85F3;\n      opacity: 0.7;\n}\n\n.react-datepicker__day--today{\n  border: 1px solid #FFF;\n  background-color: transparent;\n  color: #fff;\n}\n.react-datepicker__day--selected.react-datepicker__day--today, .react-datepicker__day--outside-month.react-datepicker__day--selected{\n  background-color: #fff;\n  color: #3E85F3;\n}\n\n\n\n`;\n\nexport const DatePickerCastom = styled(DatePickerStyles)`\ndisplay: none;\n`;\n\n\nexport const Wrapper = styled.div`\nposition: relative;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 18px;\n\n  @media screen and (min-width: 768px) {\n    justify-content: none;\n    gap: 8px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const ContainerBtn = styled.div`\n  display: flex;\n`;\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 36px;\n  height: 30px;\n  font-size: 14px;\n  color: #343434;\n  border: 1px solid #edf1f2;\n  background-color: #fff;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    width: 38px;\n    height: 34px;\n  }\n`;\n\n\n\nexport const ButtonLeft = styled(Button)`\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border-right: none;\n  background-color: ${props => props.typeDate === 'month' && '#CAE8FF'};\n`;\n\nexport const ButtonRight = styled(Button)`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  background-color: ${props => props.typeDate === 'day' && '#CAE8FF'};\n`;\n\nexport const ArrowLeft = styled(MdOutlineKeyboardArrowLeft)`\n  width: 16px;\n  height: 16px;\n  fill: ${props => props.disabled ? \"#DCE3E5\" : \"#343434\"};\n\n  @media screen and (min-width: 768px) {\n    width: 18px;\n    height: 18px;\n  }\n`;\n\nexport const ArrowRight = styled(MdOutlineKeyboardArrowRight)`\n  width: 16px;\n  height: 16px;\n  fill: #343434;\n\n  @media screen and (min-width: 768px) {\n    width: 18px;\n    height: 18px;\n  }\n`;\n","export const formatPeriod = (date, type) => {\n  const options = {};\n  let formattedDate = '';\n\n  if (type === 'month') {\n    options.month = 'long';\n    options.year = 'numeric';\n    formattedDate = new Intl.DateTimeFormat('en-US', options).format(date);\n  } else if (type === 'day') {\n    options.day = 'numeric';\n    options.month = 'short';\n    options.year = 'numeric';\n    const newDate = new Intl.DateTimeFormat('en-US', options).format(date);\n    const year = newDate.split(\",\")[1];\n    const dayMonth = newDate.split(\",\")[0].split(\" \").reverse().join(\" \");\n    formattedDate = `${dayMonth}${year}`\n  }\n\n  return formattedDate;\n}","import { useEffect, useState } from 'react';\nimport {\n  ArrowLeft,\n  ArrowRight,\n  ButtonLeft,\n  ButtonRight,\n  ContainerBtn,\n  Period,\n  Wrapper,\n  PickerWrapper,\n  DatePickerCastom,\n} from './PeriodPaginator.styled';\n\nimport { formatPeriod } from 'utils/calendarToolbar/formatPeriod';\nimport { changeDate } from 'utils/calendarToolbar/changeDate';\n\nexport const PeriodPaginator = ({ minDate, date, setDate, typenav }) => {\n  const [period, setPeriod] = useState(() => formatPeriod(date, typenav));\n  const [openPicker, setOpenPicker] = useState(false);\n  const [minDateDisabled, setMinDateDisabled] = useState(false);\n\n  const handlePickerChange = newValue => {\n    setDate(newValue);\n    setOpenPicker(false);\n  };\n\n  const handleClick = num => {\n    setDate(changeDate(date, num, typenav));\n  };\n\n  useEffect(() => {\n    setPeriod(formatPeriod(date, typenav));\n  }, [typenav, date]);\n\n  useEffect(() => {\n    const months = [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec',\n    ];\n\n    if (typenav === 'day') {\n      const formattedDate = `${\n        months[date.getMonth()]\n      } ${date.getDate()} ${date.getFullYear()}`;\n\n      setMinDateDisabled(formattedDate === minDate);\n    }\n    if (typenav === 'month') {\n      const formattedDate = `${months[date.getMonth()]} ${date.getFullYear()}`;\n      const arrDate = minDate.split(' ');\n      const newMinDate = `${arrDate[0]} ${arrDate[2]}`;\n      setOpenPicker(false);\n      setMinDateDisabled(formattedDate === newMinDate);\n    }\n  }, [date, minDate, typenav]);\n\n  return (\n    <Wrapper>\n      <Period onClick={() => setOpenPicker(true)}>{period}</Period>\n\n      <PickerWrapper>\n        {openPicker && typenav === 'day' && (\n          <DatePickerCastom\n            open\n            selected={date}\n            calendarStartDay={1}\n            closeOnSelect={true}\n            minDate={new Date(minDate)}\n            onChange={handlePickerChange}\n            formatWeekDay={nameOfDay => nameOfDay.slice(0, 1)}\n            onClickOutside={() => setOpenPicker(false)}\n          />\n        )}\n      </PickerWrapper>\n\n      <ContainerBtn>\n        <ButtonLeft onClick={() => handleClick(-1)} disabled={minDateDisabled}>\n          <ArrowLeft disabled={minDateDisabled} />\n        </ButtonLeft>\n\n        <ButtonRight onClick={() => handleClick(1)}>\n          <ArrowRight />\n        </ButtonRight>\n      </ContainerBtn>\n    </Wrapper>\n  );\n};\n","export const changeDate = (date, num, type) => {\n  const modifiedDate = new Date(date);\n  if (type === 'month') {\n    modifiedDate.setMonth(modifiedDate.getMonth() + num);\n    return modifiedDate;\n  }\n  if (type === 'day') {\n    modifiedDate.setDate(modifiedDate.getDate() + num);\n    return modifiedDate;\n  }\n};\n","import styled from 'styled-components';\n\nconst Button = styled.button`\ndisplay: inline;\n  width: 76px;\n  height: 34px;\n  font-size: 14px;\n  color: #3e85f3;\n  background-color: #e3f3ff;\n\n  @media screen and (min-width: 768px) {\n    width: 82px;\n    height: 34px;\n    font-size: 16px;\n  }\n`;\n\nexport const ButtonMonth = styled(Button)`\n  border-radius: none;\n\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border-right: 1px solid #aed4fd;\n  background-color: ${props => props.typenav === 'month' && '#CAE8FF'};\n`;\n\nexport const ButtonDay = styled(Button)`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  background-color: ${props => props.typenav === 'day' && '#CAE8FF'};\n`;\n","import { ButtonDay, ButtonMonth } from './PeriodTypeSelect.styled';\n\nexport const PeriodTypeSelect = ({typenav, setTypeNav }) => {\n  return (\n    <div>\n      <ButtonMonth onClick={() => setTypeNav('month')} typenav={typenav} >\n        Month\n      </ButtonMonth>\n      <ButtonDay onClick={() => setTypeNav('day')} typenav={typenav}>\n        Day\n      </ButtonDay>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { Container } from './CalendarToolbar.styled';\nimport { PeriodPaginator } from './PeriodPaginator/PeriodPaginator';\nimport { PeriodTypeSelect } from './PeriodTypeSelect/PeriodTypeSelect';\n\nexport const CalendarToolbar = () => {\n  const [date, setDate] = useState(() => new Date());\n  const [typeNav, setTypeNav] = useState('month');\n\n  return (\n    <Container>\n      <PeriodPaginator minDate={'Jun 23 2023'} date={date} setDate={setDate} typenav={typeNav} />\n      <PeriodTypeSelect typenav={typeNav} setTypeNav={setTypeNav} />\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\n\nexport const Container = styled.div`\n/* padding: 0 15px */\n`","import { CalendarToolbar } from 'components/CalendarToolbar/CalendarToolbar'\nimport {Container} from './Calendar.styled'\n\n\nexport const Calendar = () => {\n\n  return(\n    <Container>\n      <CalendarToolbar/>\n    </Container>\n  )\n}","import { Calendar } from \"components/Calendar/Calendar\"\n\n\nconst CalendarPage = () => {\n  return(\n<Calendar/>\n  )\n}\n\nexport default CalendarPage"],"names":["Wrapper","styled","FormUserProfile","Form","BtnUploadAvatar","Field","Avatar","LabelAvatar","AvatarWrapper","UserName","UserLabel","Input","Label","MainFieldWrapper","BlockFieldWrapper","SubmitBtn","DatePickerStyles","DatePicker","DatePickerWrapper","Container","Period","PickerWrapper","DatePickerCastom","ContainerBtn","Button","ButtonLeft","props","typeDate","ButtonRight","ArrowLeft","MdOutlineKeyboardArrowLeft","disabled","ArrowRight","MdOutlineKeyboardArrowRight","formatPeriod","date","type","options","formattedDate","month","year","Intl","DateTimeFormat","format","day","newDate","split","dayMonth","reverse","join","PeriodPaginator","minDate","setDate","typenav","useState","period","setPeriod","openPicker","setOpenPicker","minDateDisabled","setMinDateDisabled","handleClick","num","modifiedDate","Date","setMonth","getMonth","getDate","changeDate","useEffect","months","getFullYear","arrDate","newMinDate","onClick","open","selected","calendarStartDay","closeOnSelect","onChange","newValue","formatWeekDay","nameOfDay","slice","onClickOutside","ButtonMonth","ButtonDay","PeriodTypeSelect","setTypeNav","CalendarToolbar","typeNav","Calendar"],"sourceRoot":""}